buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'Kihira Maven'
        url = 'http://maven.foxes.rocks'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven'

sourceCompatibility='1.8'
targetCompatibility='1.8'

configurations {
    deployerJars
    all {
        resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
    }
}

ext {
    massive = "1"
    major = "8"
    minor = "1"
    mcVersion = "1.10.2"
    forgeVersion = "12.18.1.2076"
    foxlibVersion = "${project.mcVersion}-0.11.1"
}

group= "uk.kihira.tails"
archivesBaseName = "Tails"
version = "${project.mcVersion}-${project.massive}.${project.major}.${project.minor}"

dependencies {
    deobfCompile "uk.kihira.foxlib:FoxLib:${project.mcVersion}-0.11+" // This requires setupDecompWorkspace to refresh
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

minecraft {
    version = "${project.mcVersion}-${project.forgeVersion}"
    runDir = "run"
    mappings = "snapshot_20160518"

    replace '@VERSION@', project.version
    replace '@MCVERSION@', project.mcVersion
    replace '@FOXLIBVERSION@', project.foxlibVersion // todo auto calculate current version?
}

//noinspection GroovyAssignabilityCheck
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

//noinspection GroovyAssignabilityCheck
jar {
    classifier = "nonshaded"
}

// provides the task reobfShadowJar
reobf {
    shadowJar {}
}

shadowJar {
    classifier = ""
}

build.dependsOn 'reobfShadowJar' // standard build should create a shadow jar

/**
 * Maven uploading
 */
def deployer = {
    repository(url: project.properties.maven_url) {
        configuration = configurations.deployerJars
        authentication(userName: project.properties.maven_username ?: "", password: project.properties.maven_password ?: "")
    }

    pom {
        groupId = project.group
        version = project.version
        artifactId = project.archivesBaseName

        project {
            name project.archivesBaseName
            packaging 'jar'
            description 'Tails'
            url 'https://github.com/kihira/Tails/'

            scm {
                url 'https://github.com/kihira/Tails/'
                connection 'scm:git:git://github.com/kihira/Tails.git'
                developerConnection 'scm:git:git@github.com/kihira/Tails.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/kihira/Tails/issues'
            }

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'Kihira'
                    name 'Kihira'
                    roles {
                        role 'developer'
                    }
                }
            }
        }
    }
}

uploadArchives {
    repositories.mavenDeployer(deployer) // This took faaaaaaar too long to figure out how to do it
}

uploadShadow {
    dependsOn 'reobfShadowJar'
    repositories.mavenDeployer(deployer)
}